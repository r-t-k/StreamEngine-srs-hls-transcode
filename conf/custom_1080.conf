listen              1935;
max_connections     1000;
srs_log_tank        file;
srs_log_file        ./objs/srs.log;
daemon              off;
http_api {
    enabled         on;
    listen          1985;
}
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
    crossdomain on;
}
stats {
    network         0;
    disk            sda sdb xvda xvdb;
}
vhost __defaultVhost__ {
   hls {
           # whether the hls is enabled.
           # if off, do not write hls(ts and m3u8) when publish.
           # default: off
           enabled         on;
           # the hls fragment in seconds, the duration of a piece of ts.
           # default: 10
           hls_fragment    10;
           # the hls m3u8 target duration ratio,
           #   EXT-X-TARGETDURATION = hls_td_ratio * hls_fragment // init
           #   EXT-X-TARGETDURATION = max(ts_duration, EXT-X-TARGETDURATION) // for each ts
           # @see https://github.com/ossrs/srs/issues/304#issuecomment-74000081
           # default: 1.5
           hls_td_ratio    1.5;
           # the audio overflow ratio.
           # for pure audio, the duration to reap the segment.
           # for example, the hls_fragment is 10s, hls_aof_ratio is 2.0,
           # the segment will reap to 20s for pure audio.
           # default: 2.0
           hls_aof_ratio   2.0;
           # the hls window in seconds, the number of ts in m3u8.
           # default: 60
           hls_window      60;
           # the error strategy. can be:
           #       ignore, disable the hls.
           #       disconnect, require encoder republish.
           #       continue, ignore failed try to continue output hls.
           # @see https://github.com/ossrs/srs/issues/264
           # default: continue
           hls_on_error    continue;
           # the hls output path.
           # the m3u8 file is configured by hls_path/hls_m3u8_file, the default is:
           #       ./objs/nginx/html/[app]/[stream].m3u8
           # the ts file is configured by hls_path/hls_ts_file, the default is:
           #       ./objs/nginx/html/[app]/[stream]-[seq].ts
           # @remark the hls_path is compatible with srs v1 config.
           # default: ./objs/nginx/html
           hls_path        ./objs/nginx/html/;
           # the hls m3u8 file name.
           # we supports some variables to generate the filename.
           #       [vhost], the vhost of stream.
           #       [app], the app of stream.
           #       [stream], the stream name of stream.
           # default: [app]/[stream].m3u8
           hls_m3u8_file   [app]/[stream].m3u8;
           # the hls ts file name.
           # we supports some variables to generate the filename.
           #       [vhost], the vhost of stream.
           #       [app], the app of stream.
           #       [stream], the stream name of stream.
           #       [2006], replace this const to current year.
           #       [01], replace this const to current month.
           #       [02], replace this const to current date.
           #       [15], replace this const to current hour.
           #       [04], replace this const to current minute.
           #       [05], replace this const to current second.
           #       [999], replace this const to current millisecond.
           #       [timestamp],replace this const to current UNIX timestamp in ms.
           #       [seq], the sequence number of ts.
           #       [duration], replace this const to current ts duration.
           # @see https://github.com/ossrs/srs/wiki/v3_EN_DVR#custom-path
           # @see https://github.com/ossrs/srs/wiki/v3_EN_DeliveryHLS#hls-config
           # default: [app]/[stream]-[seq].ts
           hls_ts_file     [app]/[stream]-[seq].ts;
           # whether use floor for the hls_ts_file path generation.
           # if on, use floor(timestamp/hls_fragment) as the variable [timestamp],
           #       and use enhanced algorithm to calc deviation for segment.
           # @remark when floor on, recommend the hls_segment>=2*gop.
           # default: off
           hls_ts_floor    off;
           # the hls entry prefix, which is base url of ts url.
           # for example, the prefix is:
           #         http://your-server/
           # then, the ts path in m3u8 will be like:
           #         http://your-server/live/livestream-0.ts
           #         http://your-server/live/livestream-1.ts
           #         ...
           # optional, default to empty string.
           #hls_entry_prefix http://your-server;
           # the default audio codec of hls.
           # when codec changed, write the PAT/PMT table, but maybe ok util next ts.
           # so user can set the default codec for mp3.
           # the available audio codec:
           #       aac, mp3, an
           # default: aac
           hls_acodec      aac;
           # the default video codec of hls.
           # when codec changed, write the PAT/PMT table, but maybe ok util next ts.
           # so user can set the default codec for pure audio(without video) to vn.
           # the available video codec:
           #       h264, vn
           # default: h264
           hls_vcodec      h264;
           # whether cleanup the old expired ts files.
           # default: on
           hls_cleanup     on;
           # If there is no incoming packets, dispose HLS in this timeout in seconds,
           # which removes all HLS files including m3u8 and ts files.
           # @remark 0 to disable dispose for publisher.
           # @remark apply for publisher timeout only, while "etc/init.d/srs stop" always dispose hls.
           # default: 0
           hls_dispose     0;
           # the max size to notify hls,
           # to read max bytes from ts of specified cdn network,
           # @remark only used when on_hls_notify is config.
           # default: 64
           hls_nb_notify   64;
           # whether wait keyframe to reap segment,
           # if off, reap segment when duration exceed the fragment,
           # if on, reap segment when duration exceed and got keyframe.
           # default: on
           hls_wait_keyframe       on;

           # whether using AES encryption.
           # default: off
           hls_keys        off;
           # the number of clear ts which one key can encrypt.
           # default: 5
           hls_fragments_per_key 5;
           # the hls key file name.
           # we supports some variables to generate the filename.
           #       [vhost], the vhost of stream.
           #       [app], the app of stream.
           #       [stream], the stream name of stream.
           #       [seq], the sequence number of key corresponding to the ts.
           hls_key_file     [app]/[stream]-[seq].key;
           # the key output path.
           # the key file is configed by hls_path/hls_key_file, the default is:
           # ./objs/nginx/html/[app]/[stream]-[seq].key
           hls_key_file_path    ./objs/nginx/html/hls;
           # the key root URL, use this can support https.
           # @remark It's optional.
           hls_key_url       https://localhost:8080;

           # Special control controls.
           ###########################################
           # Whether calculate the DTS of audio frame directly.
           # If on, guess the specific DTS by AAC samples, please read https://github.com/ossrs/srs/issues/547#issuecomment-294350544
           # If off, directly turn the FLV timestamp to DTS, which might cause corrupt audio stream.
           # @remark Recommend to set to off, unless your audio stream sample-rate and timestamp is not correct.
           # Default: on
           hls_dts_directly on;

           # on_hls, never config in here, should config in http_hooks.
           # for the hls http callback, @see http_hooks.on_hls of vhost hooks.callback.srs.com
           # @read https://github.com/ossrs/srs/wiki/v3_EN_DeliveryHLS#http-callback
           # @read https://github.com/ossrs/srs/wiki/v3_EN_DeliveryHLS#http-callback

           # on_hls_notify, never config in here, should config in http_hooks.
           # we support the variables to generate the notify url:
           #       [app], replace with the app.
           #       [stream], replace with the stream.
           #       [param], replace with the param.
           #       [ts_url], replace with the ts url.
           # for the hls http callback, @see http_hooks.on_hls_notify of vhost hooks.callback.srs.com
           # @read https://github.com/ossrs/srs/wiki/v3_EN_DeliveryHLS#on-hls-notify
           # @read https://github.com/ossrs/srs/wiki/v3_EN_DeliveryHLS#on-hls-notify
       }
    http_remux {
        enabled     on;
    }
        transcode {
            enabled     on;
            ffmpeg      ./objs/ffmpeg/bin/ffmpeg;
            engine ff {
                enabled         on;
                vfilter {
                }
                vcodec          libx264;
                vbitrate        4000;
                vfps            30;
                vwidth          1920;
                vheight         1080;
                vthreads        12;
           		vprofile        high;
            	vpreset         medium;
                vparams {
                }
                acodec          libfdk_aac;
                abitrate        96;
                asample_rate    48000;
                achannels       2;
                aparams {
                }
                output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
            }
        }
    dvr {
            # whether enabled dvr features
            # default: off
            enabled         on;
            # the filter for dvr to apply to.
            #       all, dvr all streams of all apps.
            #       <app>/<stream>, apply to specified stream of app.
            # for example, to dvr the following two streams:
            #       live/stream1 live/stream2
            # default: all
            dvr_apply       all;
            # the dvr plan. canbe:
            #       session reap flv/mp4 when session end(unpublish).
            #       segment reap flv/mp4 when flv duration exceed the specified dvr_duration.
            # @remark The plan append is removed in SRS3+, for it's no use.
            # default: session
            dvr_plan        session;
            # the dvr output path, *.flv or *.mp4.
            # we supports some variables to generate the filename.
            #       [vhost], the vhost of stream.
            #       [app], the app of stream.
            #       [stream], the stream name of stream.
            #       [2006], replace this const to current year.
            #       [01], replace this const to current month.
            #       [02], replace this const to current date.
            #       [15], replace this const to current hour.
            #       [04], replace this const to current minute.
            #       [05], replace this const to current second.
            #       [999], replace this const to current millisecond.
            #       [timestamp],replace this const to current UNIX timestamp in ms.
            # @remark we use golang time format "2006-01-02 15:04:05.999" as "[2006]-[01]-[02]_[15].[04].[05]_[999]"
            # for example, for url rtmp://ossrs.net/live/livestream and time 2015-01-03 10:57:30.776
            # 1. No variables, the rule of SRS1.0(auto add [stream].[timestamp].flv as filename):
            #       dvr_path ./objs/nginx/html;
            #       =>
            #       dvr_path ./objs/nginx/html/live/livestream.1420254068776.flv;
            # 2. Use stream and date as dir name, time as filename:
            #       dvr_path /data/[vhost]/[app]/[stream]/[2006]/[01]/[02]/[15].[04].[05].[999].flv;
            #       =>
            #       dvr_path /data/ossrs.net/live/livestream/2015/01/03/10.57.30.776.flv;
            # 3. Use stream and year/month as dir name, date and time as filename:
            #       dvr_path /data/[vhost]/[app]/[stream]/[2006]/[01]/[02]-[15].[04].[05].[999].flv;
            #       =>
            #       dvr_path /data/ossrs.net/live/livestream/2015/01/03-10.57.30.776.flv;
            # 4. Use vhost/app and year/month as dir name, stream/date/time as filename:
            #       dvr_path /data/[vhost]/[app]/[2006]/[01]/[stream]-[02]-[15].[04].[05].[999].flv;
            #       =>
            #       dvr_path /data/ossrs.net/live/2015/01/livestream-03-10.57.30.776.flv;
            # 5. DVR to mp4:
            #       dvr_path ./objs/nginx/html/[app]/[stream].[timestamp].mp4;
            #       =>
            #       dvr_path ./objs/nginx/html/live/livestream.1420254068776.mp4;
            # @see https://github.com/ossrs/srs/wiki/v3_EN_DVR#custom-path
            # @see https://github.com/ossrs/srs/wiki/v3_EN_DVR#custom-path
            #       segment,session apply it.
            # default: ./objs/nginx/html/[app]/[stream].[timestamp].flv
            dvr_path ./objs/nginx/html/vod/[app]/[stream].[timestamp].mp4;
            # the duration for dvr file, reap if exceed, in seconds.
            #       segment apply it.
            #       session,append ignore.
            # default: 30
            dvr_duration    30;
            # whether wait keyframe to reap segment,
            # if off, reap segment when duration exceed the dvr_duration,
            # if on, reap segment when duration exceed and got keyframe.
            #       segment apply it.
            #       session,append ignore.
            # default: on
            dvr_wait_keyframe       on;
            # about the stream monotonically increasing:
            #   1. video timestamp is monotonically increasing,
            #   2. audio timestamp is monotonically increasing,
            #   3. video and audio timestamp is interleaved monotonically increasing.
            # it's specified by RTMP specification, @see 3. Byte Order, Alignment, and Time Format
            # however, some encoder cannot provides this feature, please set this to off to ignore time jitter.
            # the time jitter algorithm:
            #   1. full, to ensure stream start at zero, and ensure stream monotonically increasing.
            #   2. zero, only ensure stream start at zero, ignore timestamp jitter.
            #   3. off, disable the time jitter algorithm, like atc.
            # apply for all dvr plan.
            # default: full
            time_jitter             full;

            # on_dvr, never config in here, should config in http_hooks.
            # for the dvr http callback, @see http_hooks.on_dvr of vhost hooks.callback.srs.com
            # @read https://github.com/ossrs/srs/wiki/v3_EN_DVR#http-callback
            # @read https://github.com/ossrs/srs/wiki/v3_EN_DVR#http-callback
        }
        http_hooks {
                enabled         on;
                on_dvr          http://127.0.0.1:8085/api/v1/dvrs;
            }
}
