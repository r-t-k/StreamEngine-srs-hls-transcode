listen              1935;
max_connections     1000;
srs_log_tank        file;
srs_log_file        ./objs/srs.log;
daemon              off;
http_api {
    enabled         on;
    listen          1985;
}
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
}
stats {
    network         0;
    disk            sda sdb xvda xvdb;
}
vhost __defaultVhost__ {
    hls {
        enabled         on;
    }
    http_remux {
        enabled     on;
    }
        transcode {
            enabled     on;
            ffmpeg      ./objs/ffmpeg/bin/ffmpeg;
            engine ff {
                enabled         on;
                vfilter {
                }
                vcodec          libx264;
                vbitrate        500;
                vfps            25;
                vwidth          768;
                vheight         320;
                vthreads        12;
                vprofile        main;
                vpreset         medium;
                vparams {
                }
                acodec          libfdk_aac;
                abitrate        70;
                asample_rate    44100;
                achannels       2;
                aparams {
                }
                output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
            }
        }
    dvr {
            # whether enabled dvr features
            # default: off
            enabled         on;
            # the filter for dvr to apply to.
            #       all, dvr all streams of all apps.
            #       <app>/<stream>, apply to specified stream of app.
            # for example, to dvr the following two streams:
            #       live/stream1 live/stream2
            # default: all
            dvr_apply       all;
            # the dvr plan. canbe:
            #       session reap flv/mp4 when session end(unpublish).
            #       segment reap flv/mp4 when flv duration exceed the specified dvr_duration.
            # @remark The plan append is removed in SRS3+, for it's no use.
            # default: session
            dvr_plan        session;
            # the dvr output path, *.flv or *.mp4.
            # we supports some variables to generate the filename.
            #       [vhost], the vhost of stream.
            #       [app], the app of stream.
            #       [stream], the stream name of stream.
            #       [2006], replace this const to current year.
            #       [01], replace this const to current month.
            #       [02], replace this const to current date.
            #       [15], replace this const to current hour.
            #       [04], replace this const to current minute.
            #       [05], replace this const to current second.
            #       [999], replace this const to current millisecond.
            #       [timestamp],replace this const to current UNIX timestamp in ms.
            # @remark we use golang time format "2006-01-02 15:04:05.999" as "[2006]-[01]-[02]_[15].[04].[05]_[999]"
            # for example, for url rtmp://ossrs.net/live/livestream and time 2015-01-03 10:57:30.776
            # 1. No variables, the rule of SRS1.0(auto add [stream].[timestamp].flv as filename):
            #       dvr_path ./objs/nginx/html;
            #       =>
            #       dvr_path ./objs/nginx/html/live/livestream.1420254068776.flv;
            # 2. Use stream and date as dir name, time as filename:
            #       dvr_path /data/[vhost]/[app]/[stream]/[2006]/[01]/[02]/[15].[04].[05].[999].flv;
            #       =>
            #       dvr_path /data/ossrs.net/live/livestream/2015/01/03/10.57.30.776.flv;
            # 3. Use stream and year/month as dir name, date and time as filename:
            #       dvr_path /data/[vhost]/[app]/[stream]/[2006]/[01]/[02]-[15].[04].[05].[999].flv;
            #       =>
            #       dvr_path /data/ossrs.net/live/livestream/2015/01/03-10.57.30.776.flv;
            # 4. Use vhost/app and year/month as dir name, stream/date/time as filename:
            #       dvr_path /data/[vhost]/[app]/[2006]/[01]/[stream]-[02]-[15].[04].[05].[999].flv;
            #       =>
            #       dvr_path /data/ossrs.net/live/2015/01/livestream-03-10.57.30.776.flv;
            # 5. DVR to mp4:
            #       dvr_path ./objs/nginx/html/[app]/[stream].[timestamp].mp4;
            #       =>
            #       dvr_path ./objs/nginx/html/live/livestream.1420254068776.mp4;
            # @see https://github.com/ossrs/srs/wiki/v3_EN_DVR#custom-path
            # @see https://github.com/ossrs/srs/wiki/v3_EN_DVR#custom-path
            #       segment,session apply it.
            # default: ./objs/nginx/html/[app]/[stream].[timestamp].flv
            dvr_path ./objs/nginx/html/vod/[app]/[stream].[timestamp].mp4;
            # the duration for dvr file, reap if exceed, in seconds.
            #       segment apply it.
            #       session,append ignore.
            # default: 30
            dvr_duration    30;
            # whether wait keyframe to reap segment,
            # if off, reap segment when duration exceed the dvr_duration,
            # if on, reap segment when duration exceed and got keyframe.
            #       segment apply it.
            #       session,append ignore.
            # default: on
            dvr_wait_keyframe       on;
            # about the stream monotonically increasing:
            #   1. video timestamp is monotonically increasing,
            #   2. audio timestamp is monotonically increasing,
            #   3. video and audio timestamp is interleaved monotonically increasing.
            # it's specified by RTMP specification, @see 3. Byte Order, Alignment, and Time Format
            # however, some encoder cannot provides this feature, please set this to off to ignore time jitter.
            # the time jitter algorithm:
            #   1. full, to ensure stream start at zero, and ensure stream monotonically increasing.
            #   2. zero, only ensure stream start at zero, ignore timestamp jitter.
            #   3. off, disable the time jitter algorithm, like atc.
            # apply for all dvr plan.
            # default: full
            time_jitter             full;

            # on_dvr, never config in here, should config in http_hooks.
            # for the dvr http callback, @see http_hooks.on_dvr of vhost hooks.callback.srs.com
            # @read https://github.com/ossrs/srs/wiki/v3_EN_DVR#http-callback
            # @read https://github.com/ossrs/srs/wiki/v3_EN_DVR#http-callback
        }
}
